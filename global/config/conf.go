package config

import (
	"toDoList/global/logger"

	"github.com/spf13/viper"
)

var Conf = AutoGenerated{}

type AutoGenerated struct {
	RabbitMq RabbitMq `yaml:"rabbitMq"`
	Service  Service  `yaml:"service"`
	Mysql    Mysql    `yaml:"mysql"`
	Redis    Redis    `yaml:"redis"`
}

type RabbitMq struct {
	Port     int    `yaml:"port"`
	User     string `yaml:"user"`
	Password string `yaml:"password"`
	Protocol string `yaml:"protocol"`
	Host     string `yaml:"host"`
}

type Service struct {
	TaskGrpcPort int    `yaml:"task_grpc_port"`
	HttpHost     string `yaml:"http_host"`
	HttpPort     int    `yaml:"http_port"`
	EtcdHost     string `yaml:"etcd_host"`
	EtcdPort     int    `yaml:"etcd_port"`
	UserGrpcHost string `yaml:"user_grpc_host"`
	UserGrpcPort int    `yaml:"user_grpc_port"`
	TaskGrpcHost string `yaml:"task_grpc_host"`
}

type Mysql struct {
	User     string `yaml:"user"`
	Password string `yaml:"password"`
	Database string `yaml:"database"`
	Host     string `yaml:"host"`
	Port     int    `yaml:"port"`
}

type Redis struct {
	Db       int    `yaml:"db"`
	Host     string `yaml:"host"`
	Port     int    `yaml:"port"`
	Password string `yaml:"password"`
}

func ConfInit() {
	viper.SetConfigName("config")
	viper.SetConfigType("yaml")
	viper.AddConfigPath(".")
	err := viper.ReadInConfig()
	if err != nil {
		logger.Logger.DPanicf("配置文件加载错误")
	}
	viper.Unmarshal(&Conf)
}
